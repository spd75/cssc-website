{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/components/header/elements/NavLinkBar.tsx\";\nimport * as CommonStyles from '../../styles/common-styles';\nimport NavItem from '../sub-comps/NavItem';\nimport React from 'react';\nimport Separator from '../sub-comps/Separator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTAIN_PRIM_COL = 'rgba(255, 255, 255, 0.9)';\nconst CONTAIN_FLEX_GROW = 10;\nconst SEPARATOR_OFFSET_PERCENT = 1.5;\nconst InvalidProps = Error('Number of navlinks and oncliks are not the same');\nInvalidProps.name = 'InvalidProps';\nexport default class NavLinkBar extends React.Component {\n  constructor(_props) {\n    super(_props);\n    this.props = void 0;\n\n    this.renderNavLinks = () => {\n      const props = this.props;\n      var navLinks = [];\n      var numItems = props.children.length;\n\n      for (var i = 0; i < numItems; i++) {\n        navLinks.push( /*#__PURE__*/_jsxDEV(NavItem, {\n          onClick: props.onClicks[i],\n          children: props.children[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this));\n\n        if (i !== props.children.length - 1) {\n          navLinks.push( /*#__PURE__*/_jsxDEV(Separator, {\n            offset: SEPARATOR_OFFSET_PERCENT\n          }, numItems + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 31\n          }, this));\n        }\n      }\n\n      return navLinks;\n    };\n\n    this.containerStyle = () => {\n      return { ...CommonStyles.FlexCS,\n        backgroundColor: CONTAIN_PRIM_COL,\n        flexGrow: CONTAIN_FLEX_GROW\n      };\n    };\n\n    this.render = () => {\n      const st = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.containerStyle(),\n        children: this.renderNavLinks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this);\n    };\n\n    if (_props.children.length !== _props.onClicks.length) {\n      throw InvalidProps;\n    }\n\n    this.props = _props;\n    this.state = {};\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/header/elements/NavLinkBar.tsx"],"names":["CommonStyles","NavItem","React","Separator","CONTAIN_PRIM_COL","CONTAIN_FLEX_GROW","SEPARATOR_OFFSET_PERCENT","InvalidProps","Error","name","NavLinkBar","Component","constructor","props","renderNavLinks","navLinks","numItems","children","length","i","push","onClicks","containerStyle","FlexCS","backgroundColor","flexGrow","render","st","state"],"mappings":";AAAA,OAAO,KAAKA,YAAZ,MAA8B,4BAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,gBAAgB,GAAG,0BAAzB;AACA,MAAMC,iBAAiB,GAAG,EAA1B;AAEA,MAAMC,wBAAwB,GAAG,GAAjC;AAEA,MAAMC,YAAY,GAAGC,KAAK,CAAC,iDAAD,CAA1B;AACAD,YAAY,CAACE,IAAb,GAAoB,cAApB;AAOA,eAAe,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAA+D;AAG1EC,EAAAA,WAAW,CAACC,MAAD,EAAyB;AAChC,UAAMA,MAAN;AADgC,SAFpCA,KAEoC;;AAAA,SAWpCC,cAXoC,GAWnB,MAAM;AACnB,YAAMD,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAIE,QAAQ,GAAG,EAAf;AACA,UAAIC,QAAQ,GAAGH,KAAK,CAACI,QAAN,CAAeC,MAA9B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8BG,CAAC,EAA/B,EAAmC;AAC/BJ,QAAAA,QAAQ,CAACK,IAAT,eACI,QAAC,OAAD;AAAiB,UAAA,OAAO,EAAEP,KAAK,CAACQ,QAAN,CAAeF,CAAf,CAA1B;AAAA,oBACKN,KAAK,CAACI,QAAN,CAAeE,CAAf;AADL,WAAcA,CAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;;AAKA,YAAIA,CAAC,KAAKN,KAAK,CAACI,QAAN,CAAeC,MAAf,GAAwB,CAAlC,EAAqC;AACjCH,UAAAA,QAAQ,CAACK,IAAT,eAAc,QAAC,SAAD;AAA8B,YAAA,MAAM,EAAEd;AAAtC,aAAgBU,QAAQ,GAAGG,CAA3B;AAAA;AAAA;AAAA;AAAA,kBAAd;AACH;AACJ;;AACD,aAAOJ,QAAP;AACH,KA1BmC;;AAAA,SA4BpCO,cA5BoC,GA4BnB,MAAM;AACnB,aAAO,EACH,GAAGtB,YAAY,CAACuB,MADb;AAEHC,QAAAA,eAAe,EAAEpB,gBAFd;AAGHqB,QAAAA,QAAQ,EAAEpB;AAHP,OAAP;AAKH,KAlCmC;;AAAA,SAoCpCqB,MApCoC,GAoC3B,MAAM;AACX,YAAMC,EAAE,GAAG,KAAKC,KAAhB;AAEA,0BAAO;AAAK,QAAA,KAAK,EAAE,KAAKN,cAAL,EAAZ;AAAA,kBAAoC,KAAKR,cAAL;AAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAxCmC;;AAGhC,QAAID,MAAK,CAACI,QAAN,CAAeC,MAAf,KAA0BL,MAAK,CAACQ,QAAN,CAAeH,MAA7C,EAAqD;AACjD,YAAMX,YAAN;AACH;;AAED,SAAKM,KAAL,GAAaA,MAAb;AACA,SAAKe,KAAL,GAAa,EAAb;AACH;;AAZyE","sourcesContent":["import * as CommonStyles from '../../styles/common-styles';\nimport NavItem from '../sub-comps/NavItem';\nimport React from 'react';\nimport Separator from '../sub-comps/Separator';\n\nconst CONTAIN_PRIM_COL = 'rgba(255, 255, 255, 0.9)';\nconst CONTAIN_FLEX_GROW = 10;\n\nconst SEPARATOR_OFFSET_PERCENT = 1.5;\n\nconst InvalidProps = Error('Number of navlinks and oncliks are not the same');\nInvalidProps.name = 'InvalidProps';\n\ntype NavLinkBarProps = {\n    children: string[];\n    onClicks: (() => void)[];\n};\n\nexport default class NavLinkBar extends React.Component<NavLinkBarProps, any> {\n    props: NavLinkBarProps;\n\n    constructor(props: NavLinkBarProps) {\n        super(props);\n\n        if (props.children.length !== props.onClicks.length) {\n            throw InvalidProps;\n        }\n\n        this.props = props;\n        this.state = {};\n    }\n\n    renderNavLinks = () => {\n        const props = this.props;\n        var navLinks = [];\n        var numItems = props.children.length;\n        for (var i = 0; i < numItems; i++) {\n            navLinks.push(\n                <NavItem key={i} onClick={props.onClicks[i]}>\n                    {props.children[i]}\n                </NavItem>\n            );\n            if (i !== props.children.length - 1) {\n                navLinks.push(<Separator key={numItems + i} offset={SEPARATOR_OFFSET_PERCENT} />);\n            }\n        }\n        return navLinks;\n    };\n\n    containerStyle = () => {\n        return {\n            ...CommonStyles.FlexCS,\n            backgroundColor: CONTAIN_PRIM_COL,\n            flexGrow: CONTAIN_FLEX_GROW\n        };\n    };\n\n    render = () => {\n        const st = this.state;\n\n        return <div style={this.containerStyle()}>{this.renderNavLinks()}</div>;\n    };\n}\n"]},"metadata":{},"sourceType":"module"}