{"ast":null,"code":"import React from 'react';\nconst INIT_WINDOW_WIDTH = 0;\nexport default class Responsive extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    };\n\n    this.componentWillUnmount = () => window.removeEventListener('resize', this.updateWindowDimensions);\n\n    this.updateWindowDimensions = () => {\n      this.setState({\n        winWidth: window.innerWidth\n      });\n      console.log(this.state.winWidth);\n    };\n\n    this.state = {\n      winWidth: INIT_WINDOW_WIDTH\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/super-comps/Responsive.tsx"],"names":["React","INIT_WINDOW_WIDTH","Responsive","Component","constructor","props","componentDidMount","updateWindowDimensions","window","addEventListener","componentWillUnmount","removeEventListener","setState","winWidth","innerWidth","console","log","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,iBAAiB,GAAG,CAA1B;AAEA,eAAe,MAAMC,UAAN,SAA4BF,KAAK,CAACG,SAAlC,CAAoD;AAC/DC,EAAAA,WAAW,CAACC,KAAD,EAAW;AAClB,UAAMA,KAAN;;AADkB,SAOtBC,iBAPsB,GAOF,MAAM;AACtB,WAAKC,sBAAL;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,sBAAvC;AACH,KAVqB;;AAAA,SAYtBG,oBAZsB,GAYC,MAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKJ,sBAA1C,CAZP;;AAAA,SActBA,sBAdsB,GAcG,MAAM;AAC3B,WAAKK,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEL,MAAM,CAACM;AAAnB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,QAAvB;AACH,KAjBqB;;AAElB,SAAKI,KAAL,GAAa;AACTJ,MAAAA,QAAQ,EAAEZ;AADD,KAAb;AAGH;;AAN8D","sourcesContent":["import React from 'react';\n\nconst INIT_WINDOW_WIDTH = 0;\n\nexport default class Responsive<T> extends React.Component<T, any> {\n    constructor(props: T) {\n        super(props);\n        this.state = {\n            winWidth: INIT_WINDOW_WIDTH\n        };\n    }\n\n    componentDidMount = () => {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    };\n\n    componentWillUnmount = () => window.removeEventListener('resize', this.updateWindowDimensions);\n\n    updateWindowDimensions = () => {\n        this.setState({ winWidth: window.innerWidth });\n        console.log(this.state.winWidth);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}