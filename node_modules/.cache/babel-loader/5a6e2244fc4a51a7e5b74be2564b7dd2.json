{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport WWC from './windowWidthContext';\nimport { useRoutes } from 'hookrouter';\n/** Components for Login */\n\nimport HomeScreen from './components/page-home/HomeScreen';\nimport AccountScreen from './components/page-account-createlogin/CreateOrLoginScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    var _s = $RefreshSig$();\n\n    super(props);\n    this.props = void 0;\n\n    this.componentDidMount = () => {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    };\n\n    this.componentWillUnmount = () => window.removeEventListener('resize', this.updateWindowDimensions);\n\n    this.updateWindowDimensions = () => {\n      this.setState({\n        windowWidth: window.innerWidth\n      });\n    };\n\n    this.render = _s(() => {\n      _s();\n\n      const routes = {\n        '/': () => /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }, this),\n        '/member/login': () => /*#__PURE__*/_jsxDEV(AccountScreen, {\n          isCreateAccountScreen: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 36\n        }, this),\n        '/member/create-account': () => /*#__PURE__*/_jsxDEV(AccountScreen, {\n          isCreateAccountScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }, this)\n      };\n      const routeResults = useRoutes(routes);\n      return /*#__PURE__*/_jsxDEV(WWC.Provider, {\n        value: this.state.windowWidth,\n        children: [routeResults, this.props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    }, \"WGoN89yMRgJNeGI5Pw8IKwlpyg8=\", false, function () {\n      return [useRoutes];\n    });\n    this.props = props;\n    this.state = {\n      windowWidth: 0\n    };\n  }\n\n} // *** HomeScreen ***\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <App>\n//             <Header path={[Hero1, Hero2, Hero3, Hero4]} />\n//             <Betski />\n//             <Events>{eventData}</Events>\n//             <Why data={whyData} imgPaths={[Why1, Why2, Why3]} />\n//             <Join data={joinData} />\n//             <Ikon\n//                 containImg={Ikon1}\n//                 containData={ikonContainData}\n//                 infoText={ikonText}\n//                 buttonText={ikonButtonText}\n//             />\n//             <ContactUs />\n//             <Footer />\n//         </App>\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );\n// *** Login Screen ***\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    children: routeResults\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/index.tsx"],"names":["React","ReactDOM","reportWebVitals","WWC","useRoutes","HomeScreen","AccountScreen","App","Component","constructor","props","componentDidMount","updateWindowDimensions","window","addEventListener","componentWillUnmount","removeEventListener","setState","windowWidth","innerWidth","render","routes","routeResults","state","children","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA;;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,aAAP,MAA0B,2DAA1B;;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAA4C;AAGxCC,EAAAA,WAAW,CAACC,KAAD,EAAa;AAAA;;AACpB,UAAMA,KAAN;AADoB,SAFxBA,KAEwB;;AAAA,SAMxBC,iBANwB,GAMJ,MAAM;AACtB,WAAKC,sBAAL;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,sBAAvC;AACH,KATuB;;AAAA,SAWxBG,oBAXwB,GAWD,MAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKJ,sBAA1C,CAXL;;AAAA,SAaxBA,sBAbwB,GAaC,MAAM;AAC3B,WAAKK,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEL,MAAM,CAACM;AAAtB,OAAd;AACH,KAfuB;;AAAA,SAiBxBC,MAjBwB,MAiBf,MAAM;AAAA;;AACX,YAAMC,MAAM,GAAG;AACX,aAAK,mBAAM,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADA;AAEX,yBAAiB,mBAAM,QAAC,aAAD;AAAe,UAAA,qBAAqB,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFZ;AAGX,kCAA0B,mBAAM,QAAC,aAAD;AAAe,UAAA,qBAAqB,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA;AAHrB,OAAf;AAKA,YAAMC,YAAY,GAAGlB,SAAS,CAACiB,MAAD,CAA9B;AAEA,0BACI,QAAC,GAAD,CAAK,QAAL;AAAc,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWL,WAAhC;AAAA,mBACKI,YADL,EAEK,KAAKZ,KAAL,CAAWc,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KA/BuB;AAAA,cAuBCpB,SAvBD;AAAA;AAEpB,SAAKM,KAAL,GAAaA,KAAb;AACA,SAAKa,KAAL,GAAa;AAAEL,MAAAA,WAAW,EAAE;AAAf,KAAb;AACH;;AAPuC,C,CAqC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAjB,QAAQ,CAACmB,MAAT,eACI,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,GAAD;AAAA,cAAME;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAIIG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ,E,CAOA;AACA;AACA;;AACAxB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport WWC from './windowWidthContext';\nimport { useRoutes } from 'hookrouter';\n\n/** Components for Login */\nimport HomeScreen from './components/page-home/HomeScreen';\nimport AccountScreen from './components/page-account-createlogin/CreateOrLoginScreen';\n\nclass App extends React.Component<any, any> {\n    props: any;\n\n    constructor(props: any) {\n        super(props);\n        this.props = props;\n        this.state = { windowWidth: 0 };\n    }\n\n    componentDidMount = () => {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    };\n\n    componentWillUnmount = () => window.removeEventListener('resize', this.updateWindowDimensions);\n\n    updateWindowDimensions = () => {\n        this.setState({ windowWidth: window.innerWidth });\n    };\n\n    render = () => {\n        const routes = {\n            '/': () => <HomeScreen />,\n            '/member/login': () => <AccountScreen isCreateAccountScreen={false} />,\n            '/member/create-account': () => <AccountScreen isCreateAccountScreen={true} />\n        };\n        const routeResults = useRoutes(routes);\n\n        return (\n            <WWC.Provider value={this.state.windowWidth}>\n                {routeResults}\n                {this.props.children}\n            </WWC.Provider>\n        );\n    };\n}\n\n// *** HomeScreen ***\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <App>\n//             <Header path={[Hero1, Hero2, Hero3, Hero4]} />\n//             <Betski />\n//             <Events>{eventData}</Events>\n//             <Why data={whyData} imgPaths={[Why1, Why2, Why3]} />\n//             <Join data={joinData} />\n//             <Ikon\n//                 containImg={Ikon1}\n//                 containData={ikonContainData}\n//                 infoText={ikonText}\n//                 buttonText={ikonButtonText}\n//             />\n//             <ContactUs />\n//             <Footer />\n//         </App>\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );\n\n// *** Login Screen ***\nReactDOM.render(\n    <React.StrictMode>\n        <App>{routeResults}</App>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}