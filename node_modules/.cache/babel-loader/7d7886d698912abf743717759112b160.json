{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/components/common-comps/ResponsiveTextField.tsx\";\nimport Responsive from '../super-comps/Responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_TEXT_FAMILY = 'Arvo';\nconst DEFAULT_TEXT_COL = '#505050';\nconst DEFAULT_BASE_PADD = 16;\nexport default class ResponsiveTextField extends Responsive {\n  constructor(props) {\n    super(props);\n    this.props = void 0;\n\n    this.inputStyle = () => {\n      const stanPadd = `${DEFAULT_BASE_PADD * this.state.winWidth * 0.0004}px`;\n      return {\n        boxSizing: 'border-box',\n        fontFamily: DEFAULT_TEXT_FAMILY,\n        fontSize: `${this.props.size * this.state.winWidth * 0.0004}px`,\n        color: DEFAULT_TEXT_COL,\n        padding: `${stanPadd} ${stanPadd} ${this.props.height || stanPadd} ${stanPadd}`,\n        width: this.props.width || 'auto',\n        borderRadius: '0',\n        borderWidth: `${3 * this.state.winWidth * 0.0004}px`\n      };\n    };\n\n    this.render = () => {\n      if (this.props.height) {\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: this.inputStyle(),\n          placeholder: this.props.placeholder + '...',\n          onChange: this.props.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        style: this.inputStyle(),\n        placeholder: this.props.placeholder + '...',\n        onChange: this.props.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.props = props;\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/common-comps/ResponsiveTextField.tsx"],"names":["Responsive","DEFAULT_TEXT_FAMILY","DEFAULT_TEXT_COL","DEFAULT_BASE_PADD","ResponsiveTextField","constructor","props","inputStyle","stanPadd","state","winWidth","boxSizing","fontFamily","fontSize","size","color","padding","height","width","borderRadius","borderWidth","render","placeholder","onChange"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,mBAAmB,GAAG,MAA5B;AACA,MAAMC,gBAAgB,GAAG,SAAzB;AACA,MAAMC,iBAAiB,GAAG,EAA1B;AAUA,eAAe,MAAMC,mBAAN,SAAkCJ,UAAlC,CAA6D;AAGxEK,EAAAA,WAAW,CAACC,KAAD,EAAwB;AAC/B,UAAMA,KAAN;AAD+B,SAFnCA,KAEmC;;AAAA,SAKnCC,UALmC,GAKtB,MAAM;AACf,YAAMC,QAAQ,GAAI,GAAEL,iBAAiB,GAAG,KAAKM,KAAL,CAAWC,QAA/B,GAA0C,MAAO,IAArE;AAEA,aAAO;AACHC,QAAAA,SAAS,EAAE,YADR;AAEHC,QAAAA,UAAU,EAAEX,mBAFT;AAGHY,QAAAA,QAAQ,EAAG,GAAE,KAAKP,KAAL,CAAWQ,IAAX,GAAkB,KAAKL,KAAL,CAAWC,QAA7B,GAAwC,MAAO,IAHzD;AAIHK,QAAAA,KAAK,EAAEb,gBAJJ;AAKHc,QAAAA,OAAO,EAAG,GAAER,QAAS,IAAGA,QAAS,IAAG,KAAKF,KAAL,CAAWW,MAAX,IAAqBT,QAAS,IAAGA,QAAS,EAL3E;AAMHU,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY,KAAX,IAAoB,MANxB;AAOHC,QAAAA,YAAY,EAAE,GAPX;AAQHC,QAAAA,WAAW,EAAG,GAAE,IAAI,KAAKX,KAAL,CAAWC,QAAf,GAA0B,MAAO;AAR9C,OAAP;AAUH,KAlBkC;;AAAA,SAoBnCW,MApBmC,GAoB1B,MAAM;AACX,UAAI,KAAKf,KAAL,CAAWW,MAAf,EAAuB;AACnB,4BACI;AACI,UAAA,KAAK,EAAE,KAAKV,UAAL,EADX;AAEI,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWgB,WAAX,GAAyB,KAF1C;AAGI,UAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWiB;AAHzB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH;;AACD,0BACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,KAAK,EAAE,KAAKhB,UAAL,EAFX;AAGI,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWgB,WAAX,GAAyB,KAH1C;AAII,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWiB;AAJzB;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAtCkC;;AAE/B,SAAKjB,KAAL,GAAaA,KAAb;AACH;;AANuE","sourcesContent":["import Responsive from '../super-comps/Responsive';\n\nconst DEFAULT_TEXT_FAMILY = 'Arvo';\nconst DEFAULT_TEXT_COL = '#505050';\nconst DEFAULT_BASE_PADD = 16;\n\ntype TextFieldProps = {\n    placeholder: string;\n    onChange: (event: any) => void;\n    size: number;\n    width?: string;\n    height?: string;\n};\n\nexport default class ResponsiveTextField extends Responsive<TextFieldProps> {\n    props: TextFieldProps;\n\n    constructor(props: TextFieldProps) {\n        super(props);\n        this.props = props;\n    }\n\n    inputStyle = () => {\n        const stanPadd = `${DEFAULT_BASE_PADD * this.state.winWidth * 0.0004}px`;\n\n        return {\n            boxSizing: 'border-box' as 'border-box',\n            fontFamily: DEFAULT_TEXT_FAMILY,\n            fontSize: `${this.props.size * this.state.winWidth * 0.0004}px`,\n            color: DEFAULT_TEXT_COL,\n            padding: `${stanPadd} ${stanPadd} ${this.props.height || stanPadd} ${stanPadd}`,\n            width: this.props.width || 'auto',\n            borderRadius: '0',\n            borderWidth: `${3 * this.state.winWidth * 0.0004}px`\n        };\n    };\n\n    render = () => {\n        if (this.props.height) {\n            return (\n                <textarea\n                    style={this.inputStyle()}\n                    placeholder={this.props.placeholder + '...'}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n        return (\n            <input\n                type=\"password\"\n                style={this.inputStyle()}\n                placeholder={this.props.placeholder + '...'}\n                onChange={this.props.onChange}\n            />\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}