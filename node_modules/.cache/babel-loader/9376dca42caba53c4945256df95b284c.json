{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/components/elemental/ResponsiveText.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INIT_WINDOW_WIDTH = 0;\nconst TEXT_PADD = '12px 0';\nconst TEXT_MARGIN = '0';\nexport default class ResponsiveText extends React.Component {\n  constructor(_props) {\n    super(_props);\n    this.props = void 0;\n\n    this.componentDidMount = () => {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    };\n\n    this.componentWillUnmount = () => window.removeEventListener('resize', this.updateWindowDimensions);\n\n    this.updateWindowDimensions = () => {\n      this.setState({\n        winWidth: window.innerWidth\n      });\n      console.log(this.state.winWidth);\n    };\n\n    this.componentWillReceiveProps = props => {\n      this.props = { ...this.props,\n        color: props.color\n      };\n    };\n\n    this.style = () => {\n      const st = this.state;\n      return {\n        fontFamily: this.props.family,\n        fontSize: `${this.props.size * st.winWidth * 0.0004}px`,\n        color: this.props.color,\n        padding: TEXT_PADD,\n        margin: TEXT_MARGIN\n      };\n    };\n\n    this.props = _props;\n    this.state = {\n      winWidth: INIT_WINDOW_WIDTH\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: this.style(),\n      children: this.props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/elemental/ResponsiveText.tsx"],"names":["React","INIT_WINDOW_WIDTH","TEXT_PADD","TEXT_MARGIN","ResponsiveText","Component","constructor","props","componentDidMount","updateWindowDimensions","window","addEventListener","componentWillUnmount","removeEventListener","setState","winWidth","innerWidth","console","log","state","componentWillReceiveProps","color","style","st","fontFamily","family","fontSize","size","padding","margin","render","text"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;;AAEA,MAAMC,iBAAiB,GAAG,CAA1B;AACA,MAAMC,SAAS,GAAG,QAAlB;AACA,MAAMC,WAAW,GAAG,GAApB;AASA,eAAe,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAAuE;AAGlFC,EAAAA,WAAW,CAACC,MAAD,EAA6B;AACpC,UAAMA,MAAN;AADoC,SAFxCA,KAEwC;;AAAA,SAOxCC,iBAPwC,GAOpB,MAAM;AACtB,WAAKC,sBAAL;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,sBAAvC;AACH,KAVuC;;AAAA,SAYxCG,oBAZwC,GAYjB,MAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKJ,sBAA1C,CAZW;;AAAA,SAcxCA,sBAdwC,GAcf,MAAM;AAC3B,WAAKK,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEL,MAAM,CAACM;AAAnB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,QAAvB;AACH,KAjBuC;;AAAA,SAmBxCK,yBAnBwC,GAmBXb,KAAD,IAAgC;AACxD,WAAKA,KAAL,GAAa,EACT,GAAG,KAAKA,KADC;AAETc,QAAAA,KAAK,EAAEd,KAAK,CAACc;AAFJ,OAAb;AAIH,KAxBuC;;AAAA,SA0BxCC,KA1BwC,GA0BhC,MAAM;AACV,YAAMC,EAAE,GAAG,KAAKJ,KAAhB;AAEA,aAAO;AACHK,QAAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWkB,MADpB;AAEHC,QAAAA,QAAQ,EAAG,GAAE,KAAKnB,KAAL,CAAWoB,IAAX,GAAkBJ,EAAE,CAACR,QAArB,GAAgC,MAAO,IAFjD;AAGHM,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWc,KAHf;AAIHO,QAAAA,OAAO,EAAE1B,SAJN;AAKH2B,QAAAA,MAAM,EAAE1B;AALL,OAAP;AAOH,KApCuC;;AAGpC,SAAKI,KAAL,GAAaA,MAAb;AACA,SAAKY,KAAL,GAAa;AAAEJ,MAAAA,QAAQ,EAAEd;AAAZ,KAAb;AACH;;AAiCD6B,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAG,MAAA,KAAK,EAAE,KAAKR,KAAL,EAAV;AAAA,gBAAyB,KAAKf,KAAL,CAAWwB;AAApC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AA3CiF","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst INIT_WINDOW_WIDTH = 0;\nconst TEXT_PADD = '12px 0';\nconst TEXT_MARGIN = '0';\n\ntype ResponsiveTextProps = {\n    text: string;\n    size: number;\n    family: string;\n    color: string;\n};\n\nexport default class ResponsiveText extends React.Component<ResponsiveTextProps, any> {\n    props: ResponsiveTextProps;\n\n    constructor(props: ResponsiveTextProps) {\n        super(props);\n\n        this.props = props;\n        this.state = { winWidth: INIT_WINDOW_WIDTH };\n    }\n\n    componentDidMount = () => {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    };\n\n    componentWillUnmount = () => window.removeEventListener('resize', this.updateWindowDimensions);\n\n    updateWindowDimensions = () => {\n        this.setState({ winWidth: window.innerWidth });\n        console.log(this.state.winWidth);\n    };\n\n    componentWillReceiveProps = (props: ResponsiveTextProps) => {\n        this.props = {\n            ...this.props,\n            color: props.color\n        };\n    };\n\n    style = () => {\n        const st = this.state;\n\n        return {\n            fontFamily: this.props.family,\n            fontSize: `${this.props.size * st.winWidth * 0.0004}px`,\n            color: this.props.color,\n            padding: TEXT_PADD,\n            margin: TEXT_MARGIN\n        };\n    };\n\n    render() {\n        return <p style={this.style()}>{this.props.text}</p>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}