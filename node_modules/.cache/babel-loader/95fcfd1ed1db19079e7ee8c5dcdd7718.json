{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/components/final/Header.tsx\";\nimport Responsive from '../super-comps/Responsive';\nimport NavBar from './NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_RATIO = 0.5;\nconst NAV_LINKS = ['Club News', 'Trips', 'Equipment', 'About Us', 'Contact Us'];\nconst ON_CLICKS = [() => console.log('Club news'), () => console.log('Trips'), () => console.log('Equipment'), () => console.log('About Us'), () => console.log('Contact Us')];\nexport default class HeroHeader extends Responsive {\n  constructor(props) {\n    super(props);\n    this.props = void 0;\n\n    this.switchImage = () => {\n      const prevPointer = this.state.pointer;\n      const maxPointer = this.props.path.length;\n      this.setState({\n        pointer: (prevPointer + 1) % maxPointer\n      });\n    };\n\n    this.imgStyle = () => {\n      const st = this.state;\n      return {\n        backgroundImage: `url(${this.props.path[st.pointer]})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        width: `${st.winWidth}px`,\n        height: `${st.winWidth * IMG_RATIO}px`\n      };\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.imgStyle(),\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          navLinks: NAV_LINKS,\n          onClicks: ON_CLICKS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SlideShowIndicator, {\n          maxNumber: 3,\n          pointer: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.props = props;\n    const interval = window.setInterval(this.switchImage, 5000);\n    this.state = {\n      pointer: 0\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/final/Header.tsx"],"names":["Responsive","NavBar","IMG_RATIO","NAV_LINKS","ON_CLICKS","console","log","HeroHeader","constructor","props","switchImage","prevPointer","state","pointer","maxPointer","path","length","setState","imgStyle","st","backgroundImage","backgroundPosition","backgroundSize","width","winWidth","height","render","interval","window","setInterval"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,MAAMC,SAAS,GAAG,GAAlB;AAEA,MAAMC,SAAS,GAAG,CAAC,WAAD,EAAc,OAAd,EAAuB,WAAvB,EAAoC,UAApC,EAAgD,YAAhD,CAAlB;AACA,MAAMC,SAAS,GAAG,CACd,MAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CADQ,EAEd,MAAMD,OAAO,CAACC,GAAR,CAAY,OAAZ,CAFQ,EAGd,MAAMD,OAAO,CAACC,GAAR,CAAY,WAAZ,CAHQ,EAId,MAAMD,OAAO,CAACC,GAAR,CAAY,UAAZ,CAJQ,EAKd,MAAMD,OAAO,CAACC,GAAR,CAAY,YAAZ,CALQ,CAAlB;AAYA,eAAe,MAAMC,UAAN,SAAyBP,UAAzB,CAAoD;AAG/DQ,EAAAA,WAAW,CAACC,KAAD,EAAwB;AAC/B,UAAMA,KAAN;AAD+B,SAFnCA,KAEmC;;AAAA,SAWnCC,WAXmC,GAWrB,MAAM;AAChB,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,OAA/B;AACA,YAAMC,UAAU,GAAG,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,MAAnC;AACA,WAAKC,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAAE,CAACF,WAAW,GAAG,CAAf,IAAoBG;AADnB,OAAd;AAGH,KAjBkC;;AAAA,SAmBnCI,QAnBmC,GAmBxB,MAAM;AACb,YAAMC,EAAE,GAAG,KAAKP,KAAhB;AACA,aAAO;AACHQ,QAAAA,eAAe,EAAG,OAAM,KAAKX,KAAL,CAAWM,IAAX,CAAgBI,EAAE,CAACN,OAAnB,CAA4B,GADjD;AAEHQ,QAAAA,kBAAkB,EAAE,QAFjB;AAGHC,QAAAA,cAAc,EAAE,OAHb;AAIHC,QAAAA,KAAK,EAAG,GAAEJ,EAAE,CAACK,QAAS,IAJnB;AAKHC,QAAAA,MAAM,EAAG,GAAEN,EAAE,CAACK,QAAH,GAActB,SAAU;AALhC,OAAP;AAOH,KA5BkC;;AAAA,SA8BnCwB,MA9BmC,GA8B1B,MAAM;AACX,0BACI;AAAK,QAAA,KAAK,EAAE,KAAKR,QAAL,EAAZ;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEf,SAAlB;AAA6B,UAAA,QAAQ,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,kBAAD;AAAoB,UAAA,SAAS,EAAE,CAA/B;AAAkC,UAAA,OAAO,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KArCkC;;AAE/B,SAAKK,KAAL,GAAaA,KAAb;AAEA,UAAMkB,QAAQ,GAAGC,MAAM,CAACC,WAAP,CAAmB,KAAKnB,WAAxB,EAAqC,IAArC,CAAjB;AAEA,SAAKE,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAZ8D","sourcesContent":["import Responsive from '../super-comps/Responsive';\nimport NavBar from './NavBar';\nimport SlideshowIndicator from '../elemental/SlideshowIndicator';\n\nconst IMG_RATIO = 0.5;\n\nconst NAV_LINKS = ['Club News', 'Trips', 'Equipment', 'About Us', 'Contact Us'];\nconst ON_CLICKS = [\n    () => console.log('Club news'),\n    () => console.log('Trips'),\n    () => console.log('Equipment'),\n    () => console.log('About Us'),\n    () => console.log('Contact Us')\n];\n\ntype HeroImageProps = {\n    path: string[];\n};\n\nexport default class HeroHeader extends Responsive<HeroImageProps> {\n    props: HeroImageProps;\n\n    constructor(props: HeroImageProps) {\n        super(props);\n        this.props = props;\n\n        const interval = window.setInterval(this.switchImage, 5000);\n\n        this.state = {\n            pointer: 0\n        };\n    }\n\n    switchImage = () => {\n        const prevPointer = this.state.pointer;\n        const maxPointer = this.props.path.length;\n        this.setState({\n            pointer: (prevPointer + 1) % maxPointer\n        });\n    };\n\n    imgStyle = () => {\n        const st = this.state;\n        return {\n            backgroundImage: `url(${this.props.path[st.pointer]})`,\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            width: `${st.winWidth}px`,\n            height: `${st.winWidth * IMG_RATIO}px`\n        };\n    };\n\n    render = () => {\n        return (\n            <div style={this.imgStyle()}>\n                <NavBar navLinks={NAV_LINKS} onClicks={ON_CLICKS} />\n                <SlideShowIndicator maxNumber={3} pointer={1} />\n            </div>\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}