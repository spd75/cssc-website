{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/components/why-section-home/Why.tsx\";\nimport * as CommonStyles from '../styles/common-styles';\nimport ContainImage from './ContainImage';\nimport React from 'react';\nimport ResponsiveText from '../elemental-comps/ResponsiveText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InvalidDataError = new Error('Info box props or image paths does not have correct length.');\nInvalidDataError.name = 'Invalid Data Error';\nexport default class Why extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = void 0;\n\n    this.containerStyle = () => {\n      return {\n        backgroundColor: '#F0F0F0',\n        padding: '3% 1% 2% 1%',\n        textAlign: 'center'\n      };\n    };\n\n    this.verticalContainImgStyle = () => ({ ...CommonStyles.FlexCS,\n      flexDirection: 'column',\n      width: '150%',\n      paddingRight: '0.5%'\n    });\n\n    this.horizontalContainImgStyle = () => ({ ...CommonStyles.FlexCS,\n      flexDirection: 'row'\n    });\n\n    this.filler = () => ({\n      paddingBottom: '1%'\n    });\n\n    this.render = () => {\n      const data = this.props.data;\n      const images = this.props.imgPaths;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.containerStyle(),\n        children: [/*#__PURE__*/_jsxDEV(ResponsiveText, {\n          size: 52,\n          padding: \"0 0 3% 0\",\n          children: \"Why Become a Member?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: this.horizontalContainImgStyle(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: this.verticalContainImgStyle(),\n            children: [/*#__PURE__*/_jsxDEV(ContainImage, {\n              imgPath: images[0],\n              padding: \"34% 30% 3% 5%\",\n              data: data[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: this.filler()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ContainImage, {\n              imgPath: images[1],\n              padding: \"34% 8% 3% 8%\",\n              data: data[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ContainImage, {\n            imgPath: images[2],\n            padding: \"32% 8% 0 8%\",\n            data: data[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    };\n\n    if (props.data.length !== 3 || props.imgPaths.length !== 3) {\n      throw InvalidDataError;\n    }\n\n    this.props = props;\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/why-section-home/Why.tsx"],"names":["CommonStyles","ContainImage","React","ResponsiveText","InvalidDataError","Error","name","Why","Component","constructor","props","containerStyle","backgroundColor","padding","textAlign","verticalContainImgStyle","FlexCS","flexDirection","width","paddingRight","horizontalContainImgStyle","filler","paddingBottom","render","data","images","imgPaths","length"],"mappings":";AAAA,OAAO,KAAKA,YAAZ,MAA8B,yBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;AAGA,MAAMC,gBAAgB,GAAG,IAAIC,KAAJ,CAAU,6DAAV,CAAzB;AACAD,gBAAgB,CAACE,IAAjB,GAAwB,oBAAxB;AAOA,eAAe,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiD;AAG5DC,EAAAA,WAAW,CAACC,KAAD,EAAkB;AACzB,UAAMA,KAAN;AADyB,SAF7BA,KAE6B;;AAAA,SAS7BC,cAT6B,GASZ,MAAM;AACnB,aAAO;AACHC,QAAAA,eAAe,EAAE,SADd;AAEHC,QAAAA,OAAO,EAAE,aAFN;AAGHC,QAAAA,SAAS,EAAE;AAHR,OAAP;AAKH,KAf4B;;AAAA,SAiB7BC,uBAjB6B,GAiBH,OAAO,EAC7B,GAAGf,YAAY,CAACgB,MADa;AAE7BC,MAAAA,aAAa,EAAE,QAFc;AAG7BC,MAAAA,KAAK,EAAE,MAHsB;AAI7BC,MAAAA,YAAY,EAAE;AAJe,KAAP,CAjBG;;AAAA,SAwB7BC,yBAxB6B,GAwBD,OAAO,EAC/B,GAAGpB,YAAY,CAACgB,MADe;AAE/BC,MAAAA,aAAa,EAAE;AAFgB,KAAP,CAxBC;;AAAA,SA6B7BI,MA7B6B,GA6BpB,OAAO;AACZC,MAAAA,aAAa,EAAE;AADH,KAAP,CA7BoB;;AAAA,SAiC7BC,MAjC6B,GAiCpB,MAAM;AACX,YAAMC,IAAI,GAAG,KAAKd,KAAL,CAAWc,IAAxB;AACA,YAAMC,MAAM,GAAG,KAAKf,KAAL,CAAWgB,QAA1B;AAEA,0BACI;AAAK,QAAA,KAAK,EAAE,KAAKf,cAAL,EAAZ;AAAA,gCACI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,EAAtB;AAA0B,UAAA,OAAO,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAE,KAAKS,yBAAL,EAAZ;AAAA,kCACI;AAAK,YAAA,KAAK,EAAE,KAAKL,uBAAL,EAAZ;AAAA,oCACI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAEU,MAAM,CAAC,CAAD,CAA7B;AAAkC,cAAA,OAAO,EAAC,eAA1C;AAA0D,cAAA,IAAI,EAAED,IAAI,CAAC,CAAD;AAApE;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,KAAK,EAAE,KAAKH,MAAL;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAEI,MAAM,CAAC,CAAD,CAA7B;AAAkC,cAAA,OAAO,EAAC,cAA1C;AAAyD,cAAA,IAAI,EAAED,IAAI,CAAC,CAAD;AAAnE;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEC,MAAM,CAAC,CAAD,CAA7B;AAAkC,YAAA,OAAO,EAAC,aAA1C;AAAwD,YAAA,IAAI,EAAED,IAAI,CAAC,CAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KApD4B;;AAGzB,QAAId,KAAK,CAACc,IAAN,CAAWG,MAAX,KAAsB,CAAtB,IAA2BjB,KAAK,CAACgB,QAAN,CAAeC,MAAf,KAA0B,CAAzD,EAA4D;AACxD,YAAMvB,gBAAN;AACH;;AACD,SAAKM,KAAL,GAAaA,KAAb;AACH;;AAV2D","sourcesContent":["import * as CommonStyles from '../styles/common-styles';\nimport ContainImage from './ContainImage';\nimport { InfoBoxProps } from './InfoBox';\nimport React from 'react';\nimport ResponsiveText from '../elemental-comps/ResponsiveText';\nimport Why1 from '../../assets/why1.jpg';\n\nconst InvalidDataError = new Error('Info box props or image paths does not have correct length.');\nInvalidDataError.name = 'Invalid Data Error';\n\ntype WhyProps = {\n    data: InfoBoxProps[];\n    imgPaths: string[];\n};\n\nexport default class Why extends React.Component<WhyProps, any> {\n    props: WhyProps;\n\n    constructor(props: WhyProps) {\n        super(props);\n\n        if (props.data.length !== 3 || props.imgPaths.length !== 3) {\n            throw InvalidDataError;\n        }\n        this.props = props;\n    }\n\n    containerStyle = () => {\n        return {\n            backgroundColor: '#F0F0F0',\n            padding: '3% 1% 2% 1%',\n            textAlign: 'center' as 'center'\n        };\n    };\n\n    verticalContainImgStyle = () => ({\n        ...CommonStyles.FlexCS,\n        flexDirection: 'column' as 'column',\n        width: '150%',\n        paddingRight: '0.5%'\n    });\n\n    horizontalContainImgStyle = () => ({\n        ...CommonStyles.FlexCS,\n        flexDirection: 'row' as 'row'\n    });\n\n    filler = () => ({\n        paddingBottom: '1%'\n    });\n\n    render = () => {\n        const data = this.props.data;\n        const images = this.props.imgPaths;\n\n        return (\n            <div style={this.containerStyle()}>\n                <ResponsiveText size={52} padding=\"0 0 3% 0\">\n                    Why Become a Member?\n                </ResponsiveText>\n                <div style={this.horizontalContainImgStyle()}>\n                    <div style={this.verticalContainImgStyle()}>\n                        <ContainImage imgPath={images[0]} padding=\"34% 30% 3% 5%\" data={data[0]} />\n                        <span style={this.filler()} />\n                        <ContainImage imgPath={images[1]} padding=\"34% 8% 3% 8%\" data={data[1]} />\n                    </div>\n                    <ContainImage imgPath={images[2]} padding=\"32% 8% 0 8%\" data={data[2]} />\n                </div>\n            </div>\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}