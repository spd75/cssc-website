{"ast":null,"code":"import _objectSpread from\"/Users/serge/Documents/GitHub/cssc-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/serge/Documents/GitHub/cssc-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Users/serge/Documents/GitHub/cssc-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/serge/Documents/GitHub/cssc-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as CommonStyles from'../../styles/common-styles';import NavItem from'../sub-comps/NavItem';import React from'react';import Separator from'../sub-comps/Separator';import{jsx as _jsx}from\"react/jsx-runtime\";var CONTAIN_PRIM_COL='rgba(255, 255, 255, 0.9)';var CONTAIN_FLEX_GROW=10;var SEPARATOR_OFFSET_PERCENT=1.5;var InvalidProps=Error('Number of navlinks and oncliks are not the same');InvalidProps.name='InvalidProps';var NavLinkBar=/*#__PURE__*/function(_React$Component){_inherits(NavLinkBar,_React$Component);var _super=_createSuper(NavLinkBar);function NavLinkBar(_props){var _this;_classCallCheck(this,NavLinkBar);_this=_super.call(this,_props);_this.props=void 0;_this.renderNavLinks=function(){var props=_this.props;var navLinks=[];var numItems=props.children.length;for(var i=0;i<numItems;i++){navLinks.push(/*#__PURE__*/_jsx(NavItem,{onClick:props.onClicks[i],children:props.children[i]},i));if(i!==props.children.length-1){navLinks.push(/*#__PURE__*/_jsx(Separator,{offset:SEPARATOR_OFFSET_PERCENT},numItems+i));}}return navLinks;};_this.containerStyle=function(){return _objectSpread(_objectSpread({},CommonStyles.FlexCS),{},{backgroundColor:CONTAIN_PRIM_COL,flexGrow:CONTAIN_FLEX_GROW});};_this.render=function(){var st=_this.state;return/*#__PURE__*/_jsx(\"div\",{style:_this.containerStyle(),children:_this.renderNavLinks()});};if(_props.children.length!==_props.onClicks.length){throw InvalidProps;}_this.props=_props;_this.state={};return _this;}return NavLinkBar;}(React.Component);export{NavLinkBar as default};","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/header/elements/NavLinkBar.tsx"],"names":["CommonStyles","NavItem","React","Separator","CONTAIN_PRIM_COL","CONTAIN_FLEX_GROW","SEPARATOR_OFFSET_PERCENT","InvalidProps","Error","name","NavLinkBar","props","renderNavLinks","navLinks","numItems","children","length","i","push","onClicks","containerStyle","FlexCS","backgroundColor","flexGrow","render","st","state","Component"],"mappings":"unBAAA,MAAO,GAAKA,CAAAA,YAAZ,KAA8B,4BAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,0BAAzB,CACA,GAAMC,CAAAA,iBAAiB,CAAG,EAA1B,CAEA,GAAMC,CAAAA,wBAAwB,CAAG,GAAjC,CAEA,GAAMC,CAAAA,YAAY,CAAGC,KAAK,CAAC,iDAAD,CAA1B,CACAD,YAAY,CAACE,IAAb,CAAoB,cAApB,C,GAOqBC,CAAAA,U,oHAGjB,oBAAYC,MAAZ,CAAoC,4CAChC,uBAAMA,MAAN,EADgC,MAFpCA,KAEoC,cAWpCC,cAXoC,CAWnB,UAAM,CACnB,GAAMD,CAAAA,KAAK,CAAG,MAAKA,KAAnB,CACA,GAAIE,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,QAAQ,CAAGH,KAAK,CAACI,QAAN,CAAeC,MAA9B,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,QAApB,CAA8BG,CAAC,EAA/B,CAAmC,CAC/BJ,QAAQ,CAACK,IAAT,cACI,KAAC,OAAD,EAAiB,OAAO,CAAEP,KAAK,CAACQ,QAAN,CAAeF,CAAf,CAA1B,UACKN,KAAK,CAACI,QAAN,CAAeE,CAAf,CADL,EAAcA,CAAd,CADJ,EAKA,GAAIA,CAAC,GAAKN,KAAK,CAACI,QAAN,CAAeC,MAAf,CAAwB,CAAlC,CAAqC,CACjCH,QAAQ,CAACK,IAAT,cAAc,KAAC,SAAD,EAA8B,MAAM,CAAEZ,wBAAtC,EAAgBQ,QAAQ,CAAGG,CAA3B,CAAd,EACH,CACJ,CACD,MAAOJ,CAAAA,QAAP,CACH,CA1BmC,OA4BpCO,cA5BoC,CA4BnB,UAAM,CACnB,sCACOpB,YAAY,CAACqB,MADpB,MAEIC,eAAe,CAAElB,gBAFrB,CAGImB,QAAQ,CAAElB,iBAHd,GAKH,CAlCmC,OAoCpCmB,MApCoC,CAoC3B,UAAM,CACX,GAAMC,CAAAA,EAAE,CAAG,MAAKC,KAAhB,CAEA,mBAAO,YAAK,KAAK,CAAE,MAAKN,cAAL,EAAZ,UAAoC,MAAKR,cAAL,EAApC,EAAP,CACH,CAxCmC,CAGhC,GAAID,MAAK,CAACI,QAAN,CAAeC,MAAf,GAA0BL,MAAK,CAACQ,QAAN,CAAeH,MAA7C,CAAqD,CACjD,KAAMT,CAAAA,YAAN,CACH,CAED,MAAKI,KAAL,CAAaA,MAAb,CACA,MAAKe,KAAL,CAAa,EAAb,CARgC,aASnC,C,oBAZmCxB,KAAK,CAACyB,S,SAAzBjB,U","sourcesContent":["import * as CommonStyles from '../../styles/common-styles';\nimport NavItem from '../sub-comps/NavItem';\nimport React from 'react';\nimport Separator from '../sub-comps/Separator';\n\nconst CONTAIN_PRIM_COL = 'rgba(255, 255, 255, 0.9)';\nconst CONTAIN_FLEX_GROW = 10;\n\nconst SEPARATOR_OFFSET_PERCENT = 1.5;\n\nconst InvalidProps = Error('Number of navlinks and oncliks are not the same');\nInvalidProps.name = 'InvalidProps';\n\ntype NavLinkBarProps = {\n    children: string[];\n    onClicks: (() => void)[];\n};\n\nexport default class NavLinkBar extends React.Component<NavLinkBarProps, any> {\n    props: NavLinkBarProps;\n\n    constructor(props: NavLinkBarProps) {\n        super(props);\n\n        if (props.children.length !== props.onClicks.length) {\n            throw InvalidProps;\n        }\n\n        this.props = props;\n        this.state = {};\n    }\n\n    renderNavLinks = () => {\n        const props = this.props;\n        var navLinks = [];\n        var numItems = props.children.length;\n        for (var i = 0; i < numItems; i++) {\n            navLinks.push(\n                <NavItem key={i} onClick={props.onClicks[i]}>\n                    {props.children[i]}\n                </NavItem>\n            );\n            if (i !== props.children.length - 1) {\n                navLinks.push(<Separator key={numItems + i} offset={SEPARATOR_OFFSET_PERCENT} />);\n            }\n        }\n        return navLinks;\n    };\n\n    containerStyle = () => {\n        return {\n            ...CommonStyles.FlexCS,\n            backgroundColor: CONTAIN_PRIM_COL,\n            flexGrow: CONTAIN_FLEX_GROW\n        };\n    };\n\n    render = () => {\n        const st = this.state;\n\n        return <div style={this.containerStyle()}>{this.renderNavLinks()}</div>;\n    };\n}\n"]},"metadata":{},"sourceType":"module"}