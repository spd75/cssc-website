{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/components/elemental-comps/StanButton.tsx\";\nimport * as Universal from '../../universal';\nimport * as CommonStyles from '../styles/common-styles';\nimport Hoverable from '../super-comps/Hoverable';\nimport ResponsiveText from '../elemental-comps/ResponsiveText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_PRIM_COL = Universal.WEB_BLUE;\nconst BUTTON_HOVER_COL = Universal.WEB_BLUE_HOVER;\nconst BUTTON_WIDTH = Universal.MAX_CONTENT;\nconst BUTTON_HEIGHT = Universal.MAX_CONTENT;\nconst BUTTON_PADDING = '2% 8%';\nconst TEXT_PRIM_COL = Universal.WHITE;\nconst TEXT_SIZE = '12px';\nconst TEXT_FONT_FAMILY = Universal.MAIN_FONT;\nexport default class StanButton extends Hoverable {\n  constructor(props) {\n    super(props);\n    this.props = void 0;\n\n    this.buttonStyle = () => {\n      const st = this.state;\n      return { ...CommonStyles.FlexCC,\n        backgroundColor: !st.hovering ? BUTTON_PRIM_COL : BUTTON_HOVER_COL,\n        width: BUTTON_WIDTH,\n        height: BUTTON_HEIGHT,\n        padding: BUTTON_PADDING,\n        border: 'none',\n        cursor: st.cursor\n      };\n    };\n\n    this.textStyle = () => ({\n      fontSize: `${TEXT_SIZE}px`,\n      color: TEXT_PRIM_COL,\n      margin: '0',\n      fontFamily: TEXT_FONT_FAMILY\n    });\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        style: this.buttonStyle(),\n        onClick: this.props.onClick,\n        onMouseEnter: this.setHovered,\n        onMouseLeave: this.setUnhovered,\n        children: /*#__PURE__*/_jsxDEV(ResponsiveText, {\n          size: this.props.textSize,\n          color: TEXT_PRIM_COL,\n          padding: \"0\",\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.props = props;\n    this.state = {};\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/elemental-comps/StanButton.tsx"],"names":["Universal","CommonStyles","Hoverable","ResponsiveText","BUTTON_PRIM_COL","WEB_BLUE","BUTTON_HOVER_COL","WEB_BLUE_HOVER","BUTTON_WIDTH","MAX_CONTENT","BUTTON_HEIGHT","BUTTON_PADDING","TEXT_PRIM_COL","WHITE","TEXT_SIZE","TEXT_FONT_FAMILY","MAIN_FONT","StanButton","constructor","props","buttonStyle","st","state","FlexCC","backgroundColor","hovering","width","height","padding","border","cursor","textStyle","fontSize","color","margin","fontFamily","render","onClick","setHovered","setUnhovered","textSize","title"],"mappings":";AAAA,OAAO,KAAKA,SAAZ,MAA2B,iBAA3B;AACA,OAAO,KAAKC,YAAZ,MAA8B,yBAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;AAEA,MAAMC,eAAe,GAAGJ,SAAS,CAACK,QAAlC;AACA,MAAMC,gBAAgB,GAAGN,SAAS,CAACO,cAAnC;AACA,MAAMC,YAAY,GAAGR,SAAS,CAACS,WAA/B;AACA,MAAMC,aAAa,GAAGV,SAAS,CAACS,WAAhC;AACA,MAAME,cAAc,GAAG,OAAvB;AAEA,MAAMC,aAAa,GAAGZ,SAAS,CAACa,KAAhC;AACA,MAAMC,SAAS,GAAG,MAAlB;AACA,MAAMC,gBAAgB,GAAGf,SAAS,CAACgB,SAAnC;AAQA,eAAe,MAAMC,UAAN,SAAyBf,SAAzB,CAAoD;AAG/DgB,EAAAA,WAAW,CAACC,KAAD,EAAyB;AAChC,UAAMA,KAAN;AADgC,SAFpCA,KAEoC;;AAAA,SAMpCC,WANoC,GAMtB,MAAM;AAChB,YAAMC,EAAE,GAAG,KAAKC,KAAhB;AAEA,aAAO,EACH,GAAGrB,YAAY,CAACsB,MADb;AAEHC,QAAAA,eAAe,EAAE,CAACH,EAAE,CAACI,QAAJ,GAAerB,eAAf,GAAiCE,gBAF/C;AAGHoB,QAAAA,KAAK,EAAElB,YAHJ;AAIHmB,QAAAA,MAAM,EAAEjB,aAJL;AAKHkB,QAAAA,OAAO,EAAEjB,cALN;AAMHkB,QAAAA,MAAM,EAAE,MANL;AAOHC,QAAAA,MAAM,EAAET,EAAE,CAACS;AAPR,OAAP;AASH,KAlBmC;;AAAA,SAoBpCC,SApBoC,GAoBxB,OAAO;AACfC,MAAAA,QAAQ,EAAG,GAAElB,SAAU,IADR;AAEfmB,MAAAA,KAAK,EAAErB,aAFQ;AAGfsB,MAAAA,MAAM,EAAE,GAHO;AAIfC,MAAAA,UAAU,EAAEpB;AAJG,KAAP,CApBwB;;AAAA,SA2BpCqB,MA3BoC,GA2B3B,MAAM;AACX,0BACI;AACI,QAAA,KAAK,EAAE,KAAKhB,WAAL,EADX;AAEI,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWkB,OAFxB;AAGI,QAAA,YAAY,EAAE,KAAKC,UAHvB;AAII,QAAA,YAAY,EAAE,KAAKC,YAJvB;AAAA,+BAMI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWqB,QAAjC;AAA2C,UAAA,KAAK,EAAE5B,aAAlD;AAAiE,UAAA,OAAO,EAAC,GAAzE;AAAA,oBACK,KAAKO,KAAL,CAAWsB;AADhB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH,KAxCmC;;AAEhC,SAAKtB,KAAL,GAAaA,KAAb;AACA,SAAKG,KAAL,GAAa,EAAb;AACH;;AAP8D","sourcesContent":["import * as Universal from '../../universal';\nimport * as CommonStyles from '../styles/common-styles';\nimport Hoverable from '../super-comps/Hoverable';\nimport ResponsiveText from '../elemental-comps/ResponsiveText';\n\nconst BUTTON_PRIM_COL = Universal.WEB_BLUE;\nconst BUTTON_HOVER_COL = Universal.WEB_BLUE_HOVER;\nconst BUTTON_WIDTH = Universal.MAX_CONTENT;\nconst BUTTON_HEIGHT = Universal.MAX_CONTENT;\nconst BUTTON_PADDING = '2% 8%';\n\nconst TEXT_PRIM_COL = Universal.WHITE;\nconst TEXT_SIZE = '12px';\nconst TEXT_FONT_FAMILY = Universal.MAIN_FONT;\n\ntype StanButtonProps = {\n    title: string;\n    onClick: () => void;\n    textSize: number;\n};\n\nexport default class StanButton extends Hoverable<StanButtonProps> {\n    props: StanButtonProps;\n\n    constructor(props: StanButtonProps) {\n        super(props);\n        this.props = props;\n        this.state = {};\n    }\n\n    buttonStyle = () => {\n        const st = this.state;\n\n        return {\n            ...CommonStyles.FlexCC,\n            backgroundColor: !st.hovering ? BUTTON_PRIM_COL : BUTTON_HOVER_COL,\n            width: BUTTON_WIDTH,\n            height: BUTTON_HEIGHT,\n            padding: BUTTON_PADDING,\n            border: 'none',\n            cursor: st.cursor\n        };\n    };\n\n    textStyle = () => ({\n        fontSize: `${TEXT_SIZE}px`,\n        color: TEXT_PRIM_COL,\n        margin: '0',\n        fontFamily: TEXT_FONT_FAMILY\n    });\n\n    render = () => {\n        return (\n            <button\n                style={this.buttonStyle()}\n                onClick={this.props.onClick}\n                onMouseEnter={this.setHovered}\n                onMouseLeave={this.setUnhovered}\n            >\n                <ResponsiveText size={this.props.textSize} color={TEXT_PRIM_COL} padding=\"0\">\n                    {this.props.title}\n                </ResponsiveText>\n            </button>\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}