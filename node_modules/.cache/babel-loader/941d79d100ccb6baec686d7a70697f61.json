{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/components/common-comps/InfoBox.tsx\";\nimport * as CommonStyles from '../styles/common-styles';\nimport * as Universal from '../../universal/constants';\nimport React from 'react';\nimport ResponsiveText from './ResponsiveText';\nimport StanButton from './StanButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTAIN_PADD = '3%';\nconst CONTAIN_BOX_SHADOW = '1px 1px 10px #777';\nconst TITLE_COL = Universal.WEB_BLUE;\nconst TITLE_PADD = '0 0 2% 0';\nconst TITLE_SIZE = 38;\nconst TEXT_COL = Universal.LIGHT_BLACK;\nconst TEXT_PADD_WITH_BUTTON = '0 0 3% 0';\nconst TEXT_PADD_NO_BUTTON = '2%';\nconst TEXT_SIZE = 24;\nconst BUTTON_TEXT_SIZE = 26;\nconst BG_COL = 'rgba(255, 255, 255, 0.95)';\nconst DEFAULT_TEXT_SIZE_MULT = 1;\nexport default class InfoBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = void 0;\n\n    this.containerStyle = () => {\n      return { ...CommonStyles.FlexCC,\n        flexDirection: 'column',\n        backgroundColor: BG_COL,\n        textAlign: 'center',\n        padding: CONTAIN_PADD,\n        boxShadow: CONTAIN_BOX_SHADOW\n      };\n    };\n\n    this.renderTitle = mult => {\n      if (this.props.title) {\n        return /*#__PURE__*/_jsxDEV(ResponsiveText, {\n          size: TITLE_SIZE * mult,\n          color: TITLE_COL,\n          padding: TITLE_PADD,\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.renderButton = () => {\n      if (this.props.buttonText) {\n        return /*#__PURE__*/_jsxDEV(StanButton, {\n          title: this.props.buttonText,\n          onClick: () => console.log('clicked'),\n          textSize: BUTTON_TEXT_SIZE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.render = () => {\n      const mult = this.props.textSizeMultiplier || DEFAULT_TEXT_SIZE_MULT;\n      const padding = this.props.buttonText ? TEXT_PADD_WITH_BUTTON : TEXT_PADD_NO_BUTTON;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.containerStyle(),\n        children: [this.renderTitle(mult), /*#__PURE__*/_jsxDEV(ResponsiveText, {\n          size: TEXT_SIZE * mult,\n          color: TEXT_COL,\n          padding: padding,\n          children: this.props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), this.renderButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.props = props;\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/common-comps/InfoBox.tsx"],"names":["CommonStyles","Universal","React","ResponsiveText","StanButton","CONTAIN_PADD","CONTAIN_BOX_SHADOW","TITLE_COL","WEB_BLUE","TITLE_PADD","TITLE_SIZE","TEXT_COL","LIGHT_BLACK","TEXT_PADD_WITH_BUTTON","TEXT_PADD_NO_BUTTON","TEXT_SIZE","BUTTON_TEXT_SIZE","BG_COL","DEFAULT_TEXT_SIZE_MULT","InfoBox","Component","constructor","props","containerStyle","FlexCC","flexDirection","backgroundColor","textAlign","padding","boxShadow","renderTitle","mult","title","renderButton","buttonText","console","log","render","textSizeMultiplier","children"],"mappings":";AAAA,OAAO,KAAKA,YAAZ,MAA8B,yBAA9B;AACA,OAAO,KAAKC,SAAZ,MAA2B,2BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG,IAArB;AACA,MAAMC,kBAAkB,GAAG,mBAA3B;AAEA,MAAMC,SAAS,GAAGN,SAAS,CAACO,QAA5B;AACA,MAAMC,UAAU,GAAG,UAAnB;AACA,MAAMC,UAAU,GAAG,EAAnB;AAEA,MAAMC,QAAQ,GAAGV,SAAS,CAACW,WAA3B;AACA,MAAMC,qBAAqB,GAAG,UAA9B;AACA,MAAMC,mBAAmB,GAAG,IAA5B;AACA,MAAMC,SAAS,GAAG,EAAlB;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;AAEA,MAAMC,MAAM,GAAG,2BAAf;AAEA,MAAMC,sBAAsB,GAAG,CAA/B;AAUA,eAAe,MAAMC,OAAN,SAAsBjB,KAAK,CAACkB,SAA5B,CAAyD;AAGpEC,EAAAA,WAAW,CAACC,KAAD,EAAsB;AAC7B,UAAMA,KAAN;AAD6B,SAFjCA,KAEiC;;AAAA,SAMjCC,cANiC,GAMhB,MAAM;AACnB,aAAO,EACH,GAAGvB,YAAY,CAACwB,MADb;AAEHC,QAAAA,aAAa,EAAE,QAFZ;AAGHC,QAAAA,eAAe,EAAET,MAHd;AAIHU,QAAAA,SAAS,EAAE,QAJR;AAKHC,QAAAA,OAAO,EAAEvB,YALN;AAMHwB,QAAAA,SAAS,EAAEvB;AANR,OAAP;AAQH,KAfgC;;AAAA,SAiBjCwB,WAjBiC,GAiBlBC,IAAD,IAAkB;AAC5B,UAAI,KAAKT,KAAL,CAAWU,KAAf,EAAsB;AAClB,4BACI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAEtB,UAAU,GAAGqB,IAAnC;AAAyC,UAAA,KAAK,EAAExB,SAAhD;AAA2D,UAAA,OAAO,EAAEE,UAApE;AAAA,oBACK,KAAKa,KAAL,CAAWU;AADhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;AACJ,KAzBgC;;AAAA,SA2BjCC,YA3BiC,GA2BlB,MAAM;AACjB,UAAI,KAAKX,KAAL,CAAWY,UAAf,EAA2B;AACvB,4BACI,QAAC,UAAD;AACI,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY,UADtB;AAEI,UAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAFnB;AAGI,UAAA,QAAQ,EAAEpB;AAHd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH;AACJ,KArCgC;;AAAA,SAuCjCqB,MAvCiC,GAuCxB,MAAM;AACX,YAAMN,IAAI,GAAG,KAAKT,KAAL,CAAWgB,kBAAX,IAAiCpB,sBAA9C;AACA,YAAMU,OAAO,GAAG,KAAKN,KAAL,CAAWY,UAAX,GAAwBrB,qBAAxB,GAAgDC,mBAAhE;AAEA,0BACI;AAAK,QAAA,KAAK,EAAE,KAAKS,cAAL,EAAZ;AAAA,mBACK,KAAKO,WAAL,CAAiBC,IAAjB,CADL,eAEI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAEhB,SAAS,GAAGgB,IAAlC;AAAwC,UAAA,KAAK,EAAEpB,QAA/C;AAAyD,UAAA,OAAO,EAAEiB,OAAlE;AAAA,oBACK,KAAKN,KAAL,CAAWiB;AADhB;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAKK,KAAKN,YAAL,EALL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KApDgC;;AAG7B,SAAKX,KAAL,GAAaA,KAAb;AACH;;AAPmE","sourcesContent":["import * as CommonStyles from '../styles/common-styles';\nimport * as Universal from '../../universal/constants';\nimport React from 'react';\nimport ResponsiveText from './ResponsiveText';\nimport StanButton from './StanButton';\n\nconst CONTAIN_PADD = '3%';\nconst CONTAIN_BOX_SHADOW = '1px 1px 10px #777';\n\nconst TITLE_COL = Universal.WEB_BLUE;\nconst TITLE_PADD = '0 0 2% 0';\nconst TITLE_SIZE = 38;\n\nconst TEXT_COL = Universal.LIGHT_BLACK;\nconst TEXT_PADD_WITH_BUTTON = '0 0 3% 0';\nconst TEXT_PADD_NO_BUTTON = '2%';\nconst TEXT_SIZE = 24;\n\nconst BUTTON_TEXT_SIZE = 26;\n\nconst BG_COL = 'rgba(255, 255, 255, 0.95)';\n\nconst DEFAULT_TEXT_SIZE_MULT = 1;\n\nexport type InfoBoxProps = {\n    title?: string;\n    children: string;\n    buttonText?: string;\n    textSizeMultiplier?: number;\n    width?: string;\n};\n\nexport default class InfoBox extends React.Component<InfoBoxProps, any> {\n    props: InfoBoxProps;\n\n    constructor(props: InfoBoxProps) {\n        super(props);\n\n        this.props = props;\n    }\n\n    containerStyle = () => {\n        return {\n            ...CommonStyles.FlexCC,\n            flexDirection: 'column' as 'column',\n            backgroundColor: BG_COL,\n            textAlign: 'center' as 'center',\n            padding: CONTAIN_PADD,\n            boxShadow: CONTAIN_BOX_SHADOW\n        };\n    };\n\n    renderTitle = (mult: number) => {\n        if (this.props.title) {\n            return (\n                <ResponsiveText size={TITLE_SIZE * mult} color={TITLE_COL} padding={TITLE_PADD}>\n                    {this.props.title}\n                </ResponsiveText>\n            );\n        }\n    };\n\n    renderButton = () => {\n        if (this.props.buttonText) {\n            return (\n                <StanButton\n                    title={this.props.buttonText}\n                    onClick={() => console.log('clicked')}\n                    textSize={BUTTON_TEXT_SIZE}\n                />\n            );\n        }\n    };\n\n    render = () => {\n        const mult = this.props.textSizeMultiplier || DEFAULT_TEXT_SIZE_MULT;\n        const padding = this.props.buttonText ? TEXT_PADD_WITH_BUTTON : TEXT_PADD_NO_BUTTON;\n\n        return (\n            <div style={this.containerStyle()}>\n                {this.renderTitle(mult)}\n                <ResponsiveText size={TEXT_SIZE * mult} color={TEXT_COL} padding={padding}>\n                    {this.props.children}\n                </ResponsiveText>\n                {this.renderButton()}\n            </div>\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}