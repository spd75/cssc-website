{"ast":null,"code":"import _objectSpread from\"/Users/serge/Documents/GitHub/cssc-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/serge/Documents/GitHub/cssc-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Users/serge/Documents/GitHub/cssc-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/serge/Documents/GitHub/cssc-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import*as CommonStyles from'../../styles/common-styles';import{jsx as _jsx}from\"react/jsx-runtime\";var PointerExceededTotal=new Error('Slideshow pointer exceeded total number of elements.');PointerExceededTotal.name='PointerExceededTotal';// TODO: ADD ERROR, FIX CSS\nvar SlideshowIndicator=/*#__PURE__*/function(_React$Component){_inherits(SlideshowIndicator,_React$Component);var _super=_createSuper(SlideshowIndicator);function SlideshowIndicator(_props){var _this;_classCallCheck(this,SlideshowIndicator);_this=_super.call(this,_props);_this.totalNum=void 0;_this.componentWillReceiveProps=function(props){_this.setState({pointer:props.pointer});};_this.containerStyle=function(){return _objectSpread(_objectSpread({},CommonStyles.FlexCC),{},{borderRadius:'50%'});};_this.indicatorStyle=function(isCurrent){return _objectSpread(_objectSpread({},CommonStyles.circle(_this.props.size)),{},{margin:_this.props.separation,backgroundColor:!isCurrent?'#fff':\"\".concat(_this.props.color),boxShadow:\"\".concat(_this.props.boxShadow)});};_this.renderIndicators=function(){var indicators=[];var st=_this.state;for(var i=0;i<_this.totalNum;i++){indicators.push(/*#__PURE__*/_jsx(\"span\",{style:_this.indicatorStyle(i==st.pointer)},i));}return indicators;};_this.render=function(){return/*#__PURE__*/_jsx(\"div\",{style:_this.containerStyle(),children:_this.renderIndicators()});};_this.totalNum=_props.totalNum;_this.state={pointer:_props.pointer};return _this;}return SlideshowIndicator;}(React.Component);export{SlideshowIndicator as default};","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/header/sub-comps/SlideshowIndicator.tsx"],"names":["React","CommonStyles","PointerExceededTotal","Error","name","SlideshowIndicator","props","totalNum","componentWillReceiveProps","setState","pointer","containerStyle","FlexCC","borderRadius","indicatorStyle","isCurrent","circle","size","margin","separation","backgroundColor","color","boxShadow","renderIndicators","indicators","st","state","i","push","render","Component"],"mappings":"unBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,4BAA9B,C,2CAEA,GAAMC,CAAAA,oBAAoB,CAAG,GAAIC,CAAAA,KAAJ,CAAU,sDAAV,CAA7B,CACAD,oBAAoB,CAACE,IAArB,CAA4B,sBAA5B,CAEA;GAWqBC,CAAAA,kB,oIAGjB,4BAAYC,MAAZ,CAA4C,oDACxC,uBAAMA,MAAN,EADwC,MAF5CC,QAE4C,cAS5CC,yBAT4C,CAShB,SAACF,KAAD,CAAoC,CAC5D,MAAKG,QAAL,CAAc,CACVC,OAAO,CAAEJ,KAAK,CAACI,OADL,CAAd,EAGH,CAb2C,OAe5CC,cAf4C,CAe3B,iDACVV,YAAY,CAACW,MADH,MAEbC,YAAY,CAAE,KAFD,IAf2B,OAoB5CC,cApB4C,CAoB3B,SAACC,SAAD,wCACVd,YAAY,CAACe,MAAb,CAAoB,MAAKV,KAAL,CAAWW,IAA/B,CADU,MAEbC,MAAM,CAAE,MAAKZ,KAAL,CAAWa,UAFN,CAGbC,eAAe,CAAE,CAACL,SAAD,CAAa,MAAb,WAAyB,MAAKT,KAAL,CAAWe,KAApC,CAHJ,CAIbC,SAAS,WAAK,MAAKhB,KAAL,CAAWgB,SAAhB,CAJI,IApB2B,OA2B5CC,gBA3B4C,CA2BzB,UAAM,CACrB,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAMC,CAAAA,EAAE,CAAG,MAAKC,KAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,MAAKpB,QAAzB,CAAmCoB,CAAC,EAApC,CAAwC,CACpCH,UAAU,CAACI,IAAX,cAAgB,aAAc,KAAK,CAAE,MAAKd,cAAL,CAAoBa,CAAC,EAAIF,EAAE,CAACf,OAA5B,CAArB,EAAWiB,CAAX,CAAhB,EACH,CACD,MAAOH,CAAAA,UAAP,CACH,CAlC2C,OAoC5CK,MApC4C,CAoCnC,UAAM,CACX,mBAAO,YAAK,KAAK,CAAE,MAAKlB,cAAL,EAAZ,UAAoC,MAAKY,gBAAL,EAApC,EAAP,CACH,CAtC2C,CAGxC,MAAKhB,QAAL,CAAgBD,MAAK,CAACC,QAAtB,CACA,MAAKmB,KAAL,CAAa,CACThB,OAAO,CAAEJ,MAAK,CAACI,OADN,CAAb,CAJwC,aAO3C,C,4BAV2CV,KAAK,CAAC8B,S,SAAjCzB,kB","sourcesContent":["import React from 'react';\nimport * as CommonStyles from '../../styles/common-styles';\n\nconst PointerExceededTotal = new Error('Slideshow pointer exceeded total number of elements.');\nPointerExceededTotal.name = 'PointerExceededTotal';\n\n// TODO: ADD ERROR, FIX CSS\n\ntype SlideShowIndicatorProps = {\n    totalNum: number;\n    pointer: number;\n    size: string;\n    separation: string;\n    color: string;\n    boxShadow?: string;\n};\n\nexport default class SlideshowIndicator extends React.Component<SlideShowIndicatorProps, any> {\n    totalNum: number;\n\n    constructor(props: SlideShowIndicatorProps) {\n        super(props);\n\n        this.totalNum = props.totalNum;\n        this.state = {\n            pointer: props.pointer\n        };\n    }\n\n    componentWillReceiveProps = (props: SlideShowIndicatorProps) => {\n        this.setState({\n            pointer: props.pointer\n        });\n    };\n\n    containerStyle = () => ({\n        ...CommonStyles.FlexCC,\n        borderRadius: '50%'\n    });\n\n    indicatorStyle = (isCurrent: boolean) => ({\n        ...CommonStyles.circle(this.props.size),\n        margin: this.props.separation,\n        backgroundColor: !isCurrent ? '#fff' : `${this.props.color}`,\n        boxShadow: `${this.props.boxShadow}`\n    });\n\n    renderIndicators = () => {\n        var indicators = [];\n        const st = this.state;\n        for (var i = 0; i < this.totalNum; i++) {\n            indicators.push(<span key={i} style={this.indicatorStyle(i == st.pointer)} />);\n        }\n        return indicators;\n    };\n\n    render = () => {\n        return <div style={this.containerStyle()}>{this.renderIndicators()}</div>;\n    };\n}\n"]},"metadata":{},"sourceType":"module"}