{"ast":null,"code":"var _jsxFileName = \"/Users/serge/Documents/GitHub/cssc-website/src/components/elemental/SlideshowIndicator.tsx\";\nimport React from 'react';\nimport * as CommonStyles from '../styles/common-styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PointerExceededTotal = new Error('Slideshow pointer exceeded total number of elements.');\nPointerExceededTotal.name = 'PointerExceededTotal';\nexport default class SlideshowIndicator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.totalNum = void 0;\n    this.topMargin = void 0;\n    this.bottomMargin = void 0;\n\n    this.containerStyle = () => ({ ...CommonStyles.FlexCC,\n      margin\n    });\n\n    this.indicatorStyle = isCurrent => ({\n      height: '0',\n      width: '0.8%',\n      paddingBottom: '0.8%',\n      margin: '0 10px',\n      backgroundColor: !isCurrent ? '#fff' : '#48A8DE',\n      borderRadius: '50%'\n    });\n\n    this.renderIndicators = () => {\n      var indicators = [];\n      const st = this.state;\n\n      for (var i = 0; i < this.totalNum; i++) {\n        indicators.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          style: this.indicatorStyle(i == st.pointer)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this));\n      }\n\n      return indicators;\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.containerStyle(),\n        children: this.renderIndicators()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.totalNum = props.totalNum;\n    this.topMargin = props.topMargin;\n    this.bottomMargin = props.bottomMargin;\n    this.state = {\n      pointer: props.pointer\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/serge/Documents/GitHub/cssc-website/src/components/elemental/SlideshowIndicator.tsx"],"names":["React","CommonStyles","PointerExceededTotal","Error","name","SlideshowIndicator","Component","constructor","props","totalNum","topMargin","bottomMargin","containerStyle","FlexCC","margin","indicatorStyle","isCurrent","height","width","paddingBottom","backgroundColor","borderRadius","renderIndicators","indicators","st","state","i","push","pointer","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,YAAZ,MAA8B,yBAA9B;;AAEA,MAAMC,oBAAoB,GAAG,IAAIC,KAAJ,CAAU,sDAAV,CAA7B;AACAD,oBAAoB,CAACE,IAArB,GAA4B,sBAA5B;AASA,eAAe,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAA+E;AAK1FC,EAAAA,WAAW,CAACC,KAAD,EAAiC;AACxC,UAAMA,KAAN;AADwC,SAJ5CC,QAI4C;AAAA,SAH5CC,SAG4C;AAAA,SAF5CC,YAE4C;;AAAA,SAW5CC,cAX4C,GAW3B,OAAO,EACpB,GAAGX,YAAY,CAACY,MADI;AAEpBC,MAAAA;AAFoB,KAAP,CAX2B;;AAAA,SAgB5CC,cAhB4C,GAgB1BC,SAAD,KAAyB;AACtCC,MAAAA,MAAM,EAAE,GAD8B;AAEtCC,MAAAA,KAAK,EAAE,MAF+B;AAGtCC,MAAAA,aAAa,EAAE,MAHuB;AAItCL,MAAAA,MAAM,EAAE,QAJ8B;AAKtCM,MAAAA,eAAe,EAAE,CAACJ,SAAD,GAAa,MAAb,GAAsB,SALD;AAMtCK,MAAAA,YAAY,EAAE;AANwB,KAAzB,CAhB2B;;AAAA,SAyB5CC,gBAzB4C,GAyBzB,MAAM;AACrB,UAAIC,UAAU,GAAG,EAAjB;AACA,YAAMC,EAAE,GAAG,KAAKC,KAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjB,QAAzB,EAAmCiB,CAAC,EAApC,EAAwC;AACpCH,QAAAA,UAAU,CAACI,IAAX,eAAgB;AAAM,UAAA,KAAK,EAAE,KAAKZ,cAAL,CAAoBW,CAAC,IAAIF,EAAE,CAACI,OAA5B;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAhB;AACH;;AACD,aAAOL,UAAP;AACH,KAhC2C;;AAAA,SAkC5CM,MAlC4C,GAkCnC,MAAM;AACX,0BAAO;AAAK,QAAA,KAAK,EAAE,KAAKjB,cAAL,EAAZ;AAAA,kBAAoC,KAAKU,gBAAL;AAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KApC2C;;AAGxC,SAAKb,QAAL,GAAgBD,KAAK,CAACC,QAAtB;AACA,SAAKC,SAAL,GAAiBF,KAAK,CAACE,SAAvB;AACA,SAAKC,YAAL,GAAoBH,KAAK,CAACG,YAA1B;AACA,SAAKc,KAAL,GAAa;AACTG,MAAAA,OAAO,EAAEpB,KAAK,CAACoB;AADN,KAAb;AAGH;;AAdyF","sourcesContent":["import React from 'react';\nimport * as CommonStyles from '../styles/common-styles';\n\nconst PointerExceededTotal = new Error('Slideshow pointer exceeded total number of elements.');\nPointerExceededTotal.name = 'PointerExceededTotal';\n\ntype SlideShowIndicatorProps = {\n    totalNum: number;\n    pointer: number;\n    topMargin: number;\n    bottomMargin: number;\n};\n\nexport default class SlideshowIndicator extends React.Component<SlideShowIndicatorProps, any> {\n    totalNum: number;\n    topMargin: number;\n    bottomMargin: number;\n\n    constructor(props: SlideShowIndicatorProps) {\n        super(props);\n\n        this.totalNum = props.totalNum;\n        this.topMargin = props.topMargin;\n        this.bottomMargin = props.bottomMargin;\n        this.state = {\n            pointer: props.pointer\n        };\n    }\n\n    containerStyle = () => ({\n        ...CommonStyles.FlexCC,\n        margin\n    });\n\n    indicatorStyle = (isCurrent: boolean) => ({\n        height: '0',\n        width: '0.8%',\n        paddingBottom: '0.8%',\n        margin: '0 10px',\n        backgroundColor: !isCurrent ? '#fff' : '#48A8DE',\n        borderRadius: '50%'\n    });\n\n    renderIndicators = () => {\n        var indicators = [];\n        const st = this.state;\n        for (var i = 0; i < this.totalNum; i++) {\n            indicators.push(<span style={this.indicatorStyle(i == st.pointer)} />);\n        }\n        return indicators;\n    };\n\n    render = () => {\n        return <div style={this.containerStyle()}>{this.renderIndicators()}</div>;\n    };\n}\n"]},"metadata":{},"sourceType":"module"}